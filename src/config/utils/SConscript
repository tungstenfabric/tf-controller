# -*- mode: python; -*-

#
# Copyright (c) 2014 Juniper Networks, Inc. All rights reserved.
#

Import('CfgmEnv')
env = CfgmEnv.Clone()

utils_scripts = [
    'add_route_target.py',
    'contrail_utils.py',
    'del_route_target.py',
    'provision_bgp.py',
    'provision.py',
    'service-policy.py',
    'chmod.py',
    'contrail',
    'contrail-version',
    'demo_cfg.py',
    'provision_control.py',
    'provision_static_route.py',
    'service-template.py',
    'demo_cmds.sh',
    'provision_encap.py',
    'provision_vgw_interface.py',
    'use_floating_pool.py',
    'contrail_veth_port.py',
    'encap.py',
    'provision_forwarding_mode.py',
    'provision_vrouter.py',
    'vncop.py',
    'create_floating_pool.py',
    'multi_tenancy.py',
    'provision_linklocal.py',
    'del_projects.py',
    'net_policy_join.py',
    'provision_mx.py',
    'service-instance.py',
    'config_db_obj_name_validate.sh',
    'config_db_obj_name_validate.py',
    'provision_analytics_node.py',
    'provision_analytics_snmp_node.py',
    'provision_analytics_alarm_node.py',
    'provision_database_node.py',
    'provision_config_node.py',
    'provision_user_defined_log_statistics.py',
    'provision_alarm.py',
    'contrail_alarm.py',
    'contrail-diff-docs.py',
    'provision_issu.py',
    'issu_process.sh',
    'qosmap.py',
    'update_default_global_qos_config.py',
    'vnc_admin_api.py',
    'provision_global_vrouter_config.py',
    'chownproj.py',
]

sdist_depends = []
for utils in utils_scripts:
    sdist_depends.append(
        env.Install(Dir('.'), "#controller/src/config/utils/" + utils))

setup_test_sources = [
    'setup.py',
    'requirements.txt',
    'test-requirements.txt',
    '.stestr.conf',
    'tox.ini',
    'tests',
    'MANIFEST.in',
]

for file in setup_test_sources:
    sdist_depends.append(
        env.Install(Dir('.'), "#controller/src/config/utils/" + file))

cd_cmd = 'cd ' + Dir('.').path + ' && '
sdist_gen = env.Command('dist/contrail-config-utils-0.1dev.tar.gz',
                        'setup.py', cd_cmd + 'python setup.py sdist')

env.Depends(sdist_gen, sdist_depends)
env.Default(sdist_gen)

if 'install' in BUILD_TARGETS:
    install_cmd = env.Command(None, 'setup.py',
                              cd_cmd + 'python setup.py install %s' %
                              env['PYTHON_INSTALL_OPT'])
    env.Depends(install_cmd, sdist_depends)
    env.Alias('install', install_cmd)

test_target = env.SetupPyTestSuite(
    sdist_gen,
    '/config/api-server/dist/contrail-api-server-0.1dev.tar.gz',
    use_tox=True)

env.Alias('controller/src/config/utils:test', test_target)
