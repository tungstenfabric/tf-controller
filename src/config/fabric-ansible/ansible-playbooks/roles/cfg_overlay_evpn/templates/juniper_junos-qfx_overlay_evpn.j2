set groups {{cfg_group}} policy-options policy-statement EVPN-LB term term1 from protocol evpn
set groups {{cfg_group}} policy-options policy-statement EVPN-LB term term1 then load-balance per-packet
set groups {{cfg_group}} routing-options forwarding-table export EVPN-LB
{%     set sys_config = device_abstract_config.get('system', None) %}
{%     set sys_roles = sys_config.get('routing_bridging_roles', []) %}
{%     for ri in device_abstract_config.get('routing_instances', []) %}
{%         set ns = namespace(ri_name='') %}
{%         if ri.get('description') %}
{%             set ns.ri_name = ri.get('description')[:127] %}
{%         else %}
{%             set ns.ri_name = ri.name %}
{%         endif %}
{%         if (ri.get('is_master') != true) and (((ri.get('routing_instance_type') == 'virtual-switch') and (ri.get('comment') != 'PNF-Service-Chaining')) or (ri.get('virtual_network_is_internal') == true) or ((ri.get('routing_instance_type') == 'vrf') and (ri.get('is_public_network') == true))) %}
{%             set vrf_import = ns.ri_name+'-import' %}
{%             set vrf_export = ns.ri_name+'-export' %}
{%             for import_target in ri.get('import_targets', []) %}
{%                 set community_target = import_target.replace(':', '_') %}
set groups {{cfg_group}} policy-options policy-statement {{vrf_import}} term t1 from community {{community_target}}
set groups {{cfg_group}} policy-options community {{community_target}} members {{import_target | rtfilter}}
{%             endfor %}
set groups {{cfg_group}} policy-options policy-statement {{vrf_import}} term t1 then accept
set groups {{cfg_group}} switch-options vrf-import {{vrf_import}}
{%             for export_target in ri.get('export_targets', []) %}
{%                 set community_target = export_target.replace(':', '_') %}
{%                 if 'Route-Reflector' in sys_roles %}
{# CEM-15946 - as per this issue, changing code #}
{%                     if ri.get('virtual_network_is_internal') == true and 'vrf' in ri.get('routing_instance_type', '') %}
set groups {{cfg_group}} policy-options policy-statement {{vrf_export}} term t1 to family evpn
{%                     endif %}
{%                 endif %}
set groups {{cfg_group}} policy-options policy-statement {{vrf_export}} term t1 then community add {{community_target}}
set groups {{cfg_group}} policy-options community {{community_target}} members {{export_target | rtfilter}}
{%             endfor %}
set groups {{cfg_group}} policy-options policy-statement {{vrf_export}} term t1 then accept
{%         endif %}
{%     endfor %}
{%     for bgp_elem in device_abstract_config.get('features', {}).get('overlay-bgp',{}).get('bgp', []) %}
{%         set bgp_group_name = bgp_elem.get('name') %}
{%         set families = bgp_elem.get('families', []) %}
{%         set import_policy_list = bgp_elem.get('import_policy', []) %}
{%         set peers_list = bgp_elem.get('peers', []) %}
{%         if import_policy_list|length > 0 %}
{%             for bgp_import_policy in import_policy_list %}
set groups {{cfg_group}} protocols bgp group {{bgp_group_name}} import {{bgp_import_policy}}
{%             endfor %} {# /* dci bgp import policy */ #}
{%             if 'evpn' in families and peers_list|length > 0 %}
{%                 for peer in peers_list %}
{%                     set peer_as_number = peer.get('autonomous_system') %}
{%                     if (peer_as_number|int) <= 65535 %}
{%                         set peer_esi_rt = (peer_as_number|string) + ':7999999' %}
{%                     else %}
{%                         set peer_esi_rt = (peer_as_number|string) + 'L:7999' %}
{%                     endif %}
set groups {{cfg_group}} policy-options community community-esi-in-remote members target:{{peer_esi_rt}}
{%                 endfor %}
set groups {{cfg_group}} policy-options policy-statement import-evpn-remote term esi-in-remote from community community-esi-in-remote
set groups {{cfg_group}} policy-options policy-statement import-evpn-remote term esi-in-remote then accept
set groups {{cfg_group}} policy-options policy-statement import-evpn-remote term default-term then reject
set groups {{cfg_group}} protocols bgp group {{bgp_group_name}} import import-evpn-remote
{%             endif %} {# /* for dci, import remote fabric type1 RT for evpn */ #}
{%             for bgp_policy in bgp_elem.get('policies', []) %}
{%                 set bgp_policy_name = bgp_policy.get('name') %}
{%                 for import_target in bgp_policy.get('import_targets', []) %}
{%                     set community_target = import_target.replace(':', '_') %}
set groups {{cfg_group}} policy-options policy-statement {{bgp_policy_name}} term t1 from community {{community_target}}
set groups {{cfg_group}} policy-options community {{community_target}} members {{import_target | rtfilter}}
{%                 endfor %}
set groups {{cfg_group}} policy-options policy-statement {{bgp_policy_name}} term t1 then accept
{%             endfor %} {# /* l2 dci bgp define policyfor vn RT for type 2 to 4 routes */ #}
{%         endif %} {# /* bgp import policy */ #}
{%         for fam in families %}
{%             if fam == 'evpn' %}
{%                 set route_distinguisher = bgp_elem.get('ip_address') %}
{%                 set as_number = bgp_elem.get('autonomous_system') %}
{%                 if (as_number|int) <= 65535 %}
{%                     set esi_rt = (as_number|string) + ':7999999' %}
{%                 else %}
{%                     set esi_rt = (as_number|string) + 'L:7999' %}
{%                 endif %}
set groups {{cfg_group}} protocols evpn encapsulation vxlan
set groups {{cfg_group}} protocols evpn extended-vni-list all
set groups {{cfg_group}} switch-options vtep-source-interface lo0.0
set groups {{cfg_group}} switch-options route-distinguisher {{route_distinguisher}}:7999
set groups {{cfg_group}} switch-options vrf-target target:{{esi_rt}}
set groups {{cfg_group}} policy-options community community-esi-in members target:{{esi_rt}}
set groups {{cfg_group}} policy-options policy-statement import-evpn term esi-in from community community-esi-in
set groups {{cfg_group}} policy-options policy-statement import-evpn term esi-in then accept
set groups {{cfg_group}} policy-options policy-statement import-evpn term default-term then reject
set groups {{cfg_group}} switch-options vrf-import import-evpn
{%                 for ri in device_abstract_config.get('routing_instances', []) %}
{%                     set name = ri.get('name') %}
{%                     set vxlan_id = ri.get('vxlan_id', '') %}
{%                     if (vxlan_id != '') and (ri.get('routing_instance_type', '') == 'virtual-switch') and (ri.get('is_master') != true) %}
{%                         for export_target in ri.get('export_targets', []) %}
set groups {{cfg_group}} protocols evpn vni-options vni {{vxlan_id}} vrf-target {{export_target | rtfilter}}
{%                         endfor %}
{%                     endif %}
{%                 endfor %}
{%             endif %}
{%         endfor %}
{%     endfor %}
