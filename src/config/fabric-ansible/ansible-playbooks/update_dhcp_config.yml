---
- name: Update the DHCP config
  hosts: localhost
  connection: local
  gather_facts: no

  pre_tasks:
    - name: Include global variables
      include_vars: group_vars/all.yml

    - set_fact:
        percent_init_dict: { 'total_task_count': 2, 'task_weightage_array': [50, 50] }
    - set_fact:
        job_ctx: "{{job_ctx|combine(percent_init_dict)}}"
    - name: Save fabric UUID
      set_fact:
        fabric_uuid: "{{ playbook_input.input.fabric_uuid }}"
      when: playbook_input.input.fabric_uuid is defined
    - name: Save fabric FQNAME
      set_fact:
        fabric_fq_name: "{{ playbook_input.input.fabric_fq_name }}"
      when: playbook_input.input.fabric_fq_name is defined

  tasks:
    - name: Get fabric fabric_uuid
      vnc_db_mod:
        enable_job_ctx: False
        job_ctx: "{{ job_ctx }}"
        object_type: "fabric"
        object_op: "fq_name_to_id"
        object_dict: |
          {
            "fq_name": "{{ fabric_fq_name }}"
          }
      register: fab_uuid
      when: fabric_fq_name is defined and fabric_uuid is not defined

    - set_fact:
        fabric_uuid: "{{ fab_uuid.uuid }}"
      when: "fab_uuid is defined and 'uuid' in fab_uuid"

    - name: Get fabric fq_name
      vnc_db_mod:
        enable_job_ctx: False
        job_ctx: "{{ job_ctx }}"
        object_type: "fabric"
        object_op: "id_to_fq_name"
        object_dict: |
          {
            "uuid": "{{ fabric_uuid }}"
          }
      register: fabric_fqname
      when: fabric_fq_name is not defined

    - set_fact:
        fabric_fq_name: "{{ fabric_fqname.fq_name }}"
      when: "fabric_fqname is defined and 'fq_name' in fabric_fqname"

    - name: Save fabric name
      set_fact:
        fabric_name: "{{fabric_fq_name[-1]}}"

    - name: Save ZTP DHCP config file name
      set_fact:
        ztp_dhcp_config_file: "{{ fabric_name }}.conf"

    - name: Save ZTP TFTP script file name
      set_fact:
        ztp_tftp_script_file: "{{ fabric_name }}_juniper.sh"

- name: Delete TFTP script file
  hosts: localhost
  gather_facts: no
  connection: local

  tasks:
    - import_role:
        name: ztp_tftp

    - name: If error, set output and bail
      set_fact:
        output: "{{ output | combine(tftp_output) }}"
      when: tftp_output is defined

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 1
        jl_message: "Removed TFTP script file"
      when: tftp_output is undefined

- name: Delete DHCP config file
  hosts: localhost
  gather_facts: no
  connection: local

  tasks:
    - import_role:
        name: ztp_dhcp
      when: tftp_output is undefined

    - name: If error, set output and bail
      set_fact:
        output: "{{ output | combine(dhcp_output) }}"
      when: dhcp_output is defined

    - name: Update job log with percentage
      include_tasks: percentage_update.yml
      vars:
        current_index: 2
        jl_message: "Removed DHCP config file"
      when:
        - tftp_output is undefined
        - dhcp_output is undefined

- name: Finish up
  hosts: localhost
  gather_facts: no
  connection: local
  tasks:
    - name: Set output message
      set_fact:
        output: {'status':'Success', 'message':'Updated DHCP config'}
      when: output is undefined
